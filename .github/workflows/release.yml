name: Release

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Branch, commit SHA, or tag to checkout'
        required: false
        default: ''

jobs:
  unit-tests:
    uses: ./.github/workflows/unit-tests.yml
  integration-tests:
    uses: ./.github/workflows/integration-tests.yml

  pack-and-publish:
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.ref != '' && github.event.inputs.ref || github.ref_name }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore FilterBuilder.sln

      - name: Build
        run: dotnet build FilterBuilder.sln --no-restore --configuration Release

      - name: Install MinVer for versioning
        run: dotnet tool install --global minver-cli

      - name: Get version from MinVer
        id: minver
        run: echo "version=$(minver -t v)" >> $GITHUB_OUTPUT

      - name: Abort if pre-release (alpha/beta/rc)
        run: |
          if [[ "${{ steps.minver.outputs.version }}" == *-* ]]; then
            echo "Pre-release version detected: ${{ steps.minver.outputs.version }}. Skipping release pipeline."
            exit 0
          fi

      - name: Pack NuGet packages (auto-versioned)
        run: |
          for proj in src/*/*.csproj; do
            dotnet pack "$proj" --configuration Release --output ./local-nuget
          done

      - name: Upload NuGet packages as artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: ./local-nuget/*.nupkg

      - name: Publish to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          for pkg in ./local-nuget/*.nupkg; do
            dotnet nuget push "$pkg" --api-key "$NUGET_API_KEY" --source https://api.nuget.org/v3/index.json --skip-duplicate
          done

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v3
        with:
          config: cliff.toml
          args: --tag ${{ steps.minver.outputs.version }} --verbose
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}

      - name: Commit and push changelog
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add CHANGELOG.md
          git commit -m "chore(release): update changelog [skip ci]" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push origin master
